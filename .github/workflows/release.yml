name: Release
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Get Changelog
        id: changelog
        run: |
          wget https://github.com/git-chglog/git-chglog/releases/download/v0.14.2/git-chglog_0.14.2_linux_amd64.tar.gz
          tar xf git-chglog_0.14.2_linux_amd64.tar.gz
          REPORT=$(./git-chglog ${{ steps.get_version.outputs.VERSION }})
          REPORT="${REPORT//'%'/'%25'}"
          REPORT="${REPORT//$'\n'/'%0A'}"
          REPORT="${REPORT//$'\r'/'%0D'}"
          echo "::set-output name=CHANGELOG::$REPORT"

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Download box
        run: wget https://github.com/humbug/box/releases/download/3.11.0/box.phar

      - name: Remove dev deps
        run: composer install --no-dev

      - name: Set version string
        run: sed -i -e "s/__VERSION__/${{ steps.get_version.outputs.VERSION }}/g" src/Application.php

      - name: Build phar
        run: php box.phar compile

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: frosh-plugin-upload.phar
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: ${{ steps.get_version.outputs.VERSION }}
          body: "${{ steps.changelog.outputs.CHANGELOG }}"
          draft: false
          prerelease: false

      - name: Login into Docker Registery
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GHCR_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build image and push
        run: |
          docker build -t friendsofshopware/plugin-uploader:${{ steps.get_version.outputs.VERSION }} .
          docker build -t ghcr.io/friendsofshopware/plugin-uploader:${{ steps.get_version.outputs.VERSION }} .
          docker build -t friendsofshopware/plugin-uploader .
          docker build -t ghcr.io/friendsofshopware/plugin-uploader .
          docker push friendsofshopware/plugin-uploader:${{ steps.get_version.outputs.VERSION }}
          docker push ghcr.io/friendsofshopware/plugin-uploader:${{ steps.get_version.outputs.VERSION }}
          docker push friendsofshopware/plugin-uploader
          docker push ghcr.io/friendsofshopware/plugin-uploader
